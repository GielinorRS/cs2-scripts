// 909
[proc,toplevel_resize](component $component0, enum $enum1)
def_component $component2 = enum(component, component, $enum1, interface_161:90);
def_component $component3 = enum(component, component, $enum1, interface_161:92);
def_component $component4 = enum(component, component, $enum1, interface_161:7);
def_component $component5 = enum(component, component, $enum1, interface_161:15);
def_component $component6 = null;
def_int $int7 = enum(enum, int, enum_1960, $enum1);
def_int $int8 = enum(enum, int, enum_1961, $enum1);
def_int $int9 = enum(enum, int, enum_1135, $enum1);
def_int $int10 = enum(enum, int, enum_1136, $enum1);
def_int $int11 = 0;
def_int $int12 = 0;
def_int $int13 = 0;
def_int $int14 = 0;
def_int $int15 = 0;
def_int $int16 = 0;
def_int $width17 = if_getwidth($component0);
def_int $height18 = if_getheight($component0);
def_int $int19 = 0;
if ($enum1 = enum_1745) {
	$int15 = ~max(0, calc($width17 - if_getwidth(interface_601:19)));
	$int16 = ~max(0, calc($height18 - if_getheight(interface_601:19)));
	$component6 = enum(component, component, $enum1, interface_161:33);
	if ($component6 ! null & ~popout_available(-1) = 1) {
		$int19 = calc(scale(%varcint381, 16384, if_getwidth($component6)) + 42);
	}
}
if (%varbit4606 ! 0) {
	if (%varbit4606 = 2) {
		viewport_setfov(512, 220);
		viewport_clampfov(0, 0, 0, 0);
	} else if (%varbit4606 = 3) {
		viewport_setfov(256, 256);
		if ($enum1 = enum_1129) {
			viewport_clampfov(512, 512, 512, 512);
		} else {
			viewport_clampfov(640, 768, 512, 512);
		}
	} else {
		viewport_setfov(256, 256);
		viewport_clampfov(512, 512, 512, 512);
	}
	cam_setfollowheight(50);
	if ($component2 ! null & $component3 ! null) {
		$int11, $int12 = viewport_geteffectivesize;
		$int13, $int14 = ~max(0, calc($width17 - $int11)), ~max(0, calc($height18 - $int12));
		if_setsize($int11, $int12, ^setsize_abs, ^setsize_abs, $component2);
		if_setsize(calc($int11 - ~max(0, $int15 - $int13 - $int19)), calc($int12 - ~max(0, $int16 - $int14)), ^setsize_abs, ^setsize_abs, $component3);
		if ($component4 ! null & $component5 ! null) {
			$int13, $int14 = calc(($int13 - $int15) / 2), calc(($int14 - $int16) / 2);
			$int7, $int9 = ~max(0, calc($int7 - $int13)), ~max(0, calc($int9 - $int13));
			$int8, $int10 = ~max(0, calc($int8 - $int14)), ~max(0, calc($int10 - $int14));
			if_setposition($int7, $int8, ^setpos_abs_left, ^setpos_abs_top, $component4);
			if_setposition($int7, $int8, ^setpos_abs_left, ^setpos_abs_top, $component5);
			if_setsize(calc($int7 + $int9), calc($int8 + $int10), ^setsize_minus, ^setsize_minus, $component4);
			if_setsize(calc($int7 + $int9), calc($int8 + $int10), ^setsize_minus, ^setsize_minus, $component5);
			~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:14), $component5, $int9, $int10);
		} else {
			~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:14), $component3, 0, 0);
		}
	}
} else {
	viewport_clampfov(0, 0, 0, 0);
	if (%varcint73 >= 128 & %varcint73 <= 896 & %varcint74 >= 128 & %varcint74 <= 896) {
		~camera_do_zoom(%varcint73, %varcint74);
	} else {
		~camera_do_zoom(512, 512);
	}
	$int11, $int12 = viewport_geteffectivesize;
	if ($component2 ! null & $component3 ! null) {
		if_setsize($int11, $int12, ^setsize_abs, ^setsize_abs, $component2);
		if_setsize(calc($int11 - $int15 - $int19), calc($int12 - $int16), ^setsize_abs, ^setsize_abs, $component3);
		if ($component4 ! null & $component5 ! null) {
			if_setposition($int7, $int8, ^setpos_abs_left, ^setpos_abs_top, $component4);
			if_setposition($int7, $int8, ^setpos_abs_left, ^setpos_abs_top, $component5);
			if_setsize(calc($int7 + $int9), calc($int8 + $int10), ^setsize_minus, ^setsize_minus, $component4);
			if_setsize(calc($int7 + $int9), calc($int8 + $int10), ^setsize_minus, ^setsize_minus, $component5);
			~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:14), $component5, $int9, $int10);
		} else {
			~toplevel_mainmodal_bg_calculate($enum1, enum(component, component, $enum1, interface_161:14), $component3, 0, 0);
		}
	}
}
def_component $component20 = enum(component, component, $enum1, interface_161:16);
if ($component20 ! null) {
	if (~on_mobile = false & if_hassub($component20) = true) {
		if (%varcint173 = -2) {
			if_setsize(512, 0, ^setsize_abs, ^setsize_minus, $component20);
		} else if (%varcint173 = -3) {
			if_setsize(0, 0, ^setsize_minus, ^setsize_minus, $component20);
		} else {
			if_setsize(512, 334, ^setsize_abs, ^setsize_abs, $component20);
		}
	} else {
		if_setsize(512, 334, ^setsize_abs, ^setsize_abs, $component20);
	}
}
$component20 = enum(component, component, $enum1, interface_161:18);
def_int $x21 = 0;
def_int $y22 = 0;
if ($component20 ! null) {
	if (if_hassub(enum(component, component, $enum1, interface_161:9)) = true) {
		if (%varbit4692 ! 0) {
			$y22 = 0;
		} else {
			$y22 = 38;
		}
	}
	if (~on_mobile = true & %varbit542 = 0) {
		if (%varbit6254 = 0) {
			$x21 = calc(182 + 4);
		} else {
			$x21 = calc(120 + 4);
		}
	} else {
		$x21 = 0;
	}
	if_setposition($x21, $y22, ^setpos_abs_right, ^setpos_abs_top, $component20);
}
$component20 = enum(component, component, $enum1, interface_161:9);
$x21 = 0;
if ($component20 ! null) {
	if (~on_mobile = true) {
		if (%varbit6254 = 0) {
			$x21 = 182;
		} else {
			$x21 = 120;
		}
	} else {
		$x21 = 0;
	}
	if_setsize($x21, 0, ^setsize_minus, ^setsize_minus, $component20);
}
~toplevel_resize_customise(enum(component, component, $enum1, interface_161:33), $enum1);
