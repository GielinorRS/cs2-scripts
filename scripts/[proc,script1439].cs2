// 1439
[proc,script1439](component $component0, component $component1, component $component2)
cc_deleteall($component0);
cc_deleteall($component1);
cc_deleteall($component2);
%varcint656 = min(%varcint656, calc(%varcint657 - 1));
def_int $int3 = 0;
if (%varcint658 > 0 | %varcint659 > 0 | %varcint660 > 0 | %varcint661 > 0 | %varcint662 > 0 | %varcint663 > 0 | %varcint664 > 0 | %varcint665 > 0 | %varcint666 > 0 | %varcint667 > 0 | %varcint668 > 0 | %varcint669 > 0 | %varcint670 > 0 | %varcint658 > 13 | %varcint672 > 0 | %varcint673 > 0) {
	$int3 = 1;
}
if ($int3 = 0 | %varcint656 > 0) {
	cc_create($component2, ^iftype_text, if_getnextsubid($component2));
	cc_setsize(2, 14, ^setsize_minus, ^setsize_abs);
	cc_setposition(0, 0, ^setpos_abs_centre, ^setpos_abs_bottom);
	cc_settextalign(^settextalign_centre, ^settextalign_centre, 0);
	cc_settextfont(p11_full);
	cc_setcolour(0xff981f);
	if ($int3 = 0) {
		cc_settext("<tostring(calc(%varcint656 + 1))> / <tostring(%varcint657)>");
	} else {
		cc_settext("<tostring(%varcint656)> / <tostring(calc(%varcint657 - 1))>");
	}
}
if (%varcint656 > 0) {
	cc_create($component2, ^iftype_text, if_getnextsubid($component2));
	cc_setsize(2, 17, ^setsize_minus, ^setsize_minus);
	cc_setposition(0, 1, ^setpos_abs_centre, ^setpos_abs_top);
	cc_settextalign(^settextalign_left, ^settextalign_top, 0);
	cc_settextfont(p12_full);
	cc_setcolour(0xff981f);
	switch_int (%varcint656) {
		case 1 :
			cc_settext(%varcstring73);
		case 2 :
			cc_settext(%varcstring74);
		case 3 :
			cc_settext(%varcstring75);
		case 4 :
			cc_settext(%varcstring76);
		case 5 :
			cc_settext(%varcstring77);
		case 6 :
			cc_settext(%varcstring78);
		case 7 :
			cc_settext(%varcstring79);
		case 8 :
			cc_settext(%varcstring80);
		case 9 :
			cc_settext(%varcstring81);
		case 10 :
			cc_settext(%varcstring82);
		case 11 :
			cc_settext(%varcstring83);
		case 12 :
			cc_settext(%varcstring84);
		case 13 :
			cc_settext(%varcstring85);
		case 14 :
			cc_settext(%varcstring86);
		case 15 :
			cc_settext(%varcstring87);
		case 16 :
			cc_settext(%varcstring88);
		case 17 :
			cc_settext(%varcstring89);
		case 18 :
			cc_settext(%varcstring90);
		case 19 :
			cc_settext(%varcstring91);
		case 20 :
			cc_settext(%varcstring92);
		case 21 :
			cc_settext(%varcstring93);
		case 22 :
			cc_settext(%varcstring94);
		case 23 :
			cc_settext(%varcstring95);
		case 24 :
			cc_settext(%varcstring96);
		case 25 :
			cc_settext(%varcstring97);
		case 26 :
			cc_settext(%varcstring98);
		case 27 :
			cc_settext(%varcstring99);
		case 28 :
			cc_settext(%varcstring100);
		case 29 :
			cc_settext(%varcstring101);
		case 30 :
			cc_settext(%varcstring102);
		case 31 :
			cc_settext(%varcstring103);
		case 32 :
			cc_settext(%varcstring104);
		case 33 :
			cc_settext(%varcstring105);
		case 34 :
			cc_settext(%varcstring106);
		case 35 :
			cc_settext(%varcstring107);
		case 36 :
			cc_settext(%varcstring108);
		case 37 :
			cc_settext(%varcstring109);
		case 38 :
			cc_settext(%varcstring110);
		case 39 :
			cc_settext(%varcstring111);
		case 40 :
			cc_settext(%varcstring112);
		case 41 :
			cc_settext(%varcstring113);
		case 42 :
			cc_settext(%varcstring114);
		case 43 :
			cc_settext(%varcstring115);
		case 44 :
			cc_settext(%varcstring116);
		case 45 :
			cc_settext(%varcstring117);
		case 46 :
			cc_settext(%varcstring118);
		case 47 :
			cc_settext(%varcstring119);
		case 48 :
			cc_settext(%varcstring120);
		case 49 :
			cc_settext(%varcstring121);
	}
	return;
}
def_int $int4 = 0;
def_string $string0 = "";
def_int $int5 = 0;
while ($int4 < 16) {
	switch_int ($int4) {
		case 0 :
			$string0 = %varcstring57;
			$int5 = %varcint658;
		case 1 :
			$string0 = %varcstring58;
			$int5 = %varcint659;
		case 2 :
			$string0 = %varcstring59;
			$int5 = %varcint660;
		case 3 :
			$string0 = %varcstring60;
			$int5 = %varcint661;
		case 4 :
			$string0 = %varcstring61;
			$int5 = %varcint662;
		case 5 :
			$string0 = %varcstring62;
			$int5 = %varcint663;
		case 6 :
			$string0 = %varcstring63;
			$int5 = %varcint664;
		case 7 :
			$string0 = %varcstring64;
			$int5 = %varcint665;
		case 8 :
			$string0 = %varcstring65;
			$int5 = %varcint666;
		case 9 :
			$string0 = %varcstring66;
			$int5 = %varcint667;
		case 10 :
			$string0 = %varcstring67;
			$int5 = %varcint668;
		case 11 :
			$string0 = %varcstring68;
			$int5 = %varcint669;
		case 12 :
			$string0 = %varcstring69;
			$int5 = %varcint670;
		case 13 :
			$string0 = %varcstring70;
			$int5 = %varcint671;
		case 14 :
			$string0 = %varcstring71;
			$int5 = %varcint672;
		case 15 :
			$string0 = %varcstring72;
			$int5 = %varcint673;
		case default :
			$string0 = "";
			$int5 = 0;
	}
	if (string_length($string0) > 0) {
		cc_create($component2, ^iftype_text, if_getnextsubid($component2));
		if ($int4 = calc(16 - 1)) {
			cc_setsize(6, 17, ^setsize_minus, ^setsize_abs);
		} else {
			cc_setsize(2, 12, ^setsize_minus, ^setsize_abs);
		}
		cc_setposition(0, calc($int4 * 12 + 1), ^setpos_abs_centre, ^setpos_abs_top);
		cc_settextalign(^settextalign_left, ^settextalign_top, 0);
		cc_settextfont(p12_full);
		cc_setcolour(0xff981f);
		cc_settext($string0);
		if ($int5 > 0) {
			cc_setop(1, "Go");
			cc_setonop("script2065(event_op, $int5, $component0, $component1, $component2)");
			cc_setonmouseover("cc_text_colour_swapper(event_com, event_comsubid, ^white)");
			cc_setonmouseleave("cc_text_colour_swapper(event_com, event_comsubid, 0xff981f)");
		}
	}
	$int4 = calc($int4 + 1);
}
